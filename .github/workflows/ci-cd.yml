name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build  # Предполагается, что у вас есть скрипт "build" в package.json

      - name: Run tests
        run: npm test       # Предполагается, что у вас есть скрипт "test" в package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to SSH server  # Замените на ваш метод деплоя
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /path/to/your/deploy/directory # Замените на ваш путь
            rm -rf * # Очищаем директорию перед деплоем.  Будьте осторожны с этой командой!
            tar -xzf dist.tar.gz # Разархивируем артефакты.  Должен существовать файл dist.tar.gz
            # Любые другие команды для запуска после деплоя
            sudo systemctl restart your-service #Перезапуск сервиса (если необходимо)

      # Альтернативный способ деплоя на Heroku (раскомментируйте, если нужно)
      # - name: Deploy to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: your-heroku-app-name # Замените на ваше имя приложения
      #     heroku_email: your-heroku-email # Замените на ваш email
      #     usedocker: true
